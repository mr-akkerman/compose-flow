@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* Предотвращение скроллинга и установка высоты на весь экран */
  html, body {
    @apply bg-black text-white overflow-hidden h-full;
    font-family: 'Inter', sans-serif;
  }
  
  /* Стили для тонкого скроллбара */
  .scrollbar-thin {
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.1) transparent;
  }
  
  .scrollbar-thin::-webkit-scrollbar {
    width: 4px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 20px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb:hover {
    background-color: rgba(255, 255, 255, 0.2);
  }
}

@layer components {
  .button-primary {
    @apply bg-primary-500 hover:bg-primary-600 text-white rounded-lg px-4 py-2 font-medium transition-colors;
  }

  .button-secondary {
    @apply bg-white/5 hover:bg-white/10 rounded-lg px-4 py-2 font-medium transition-colors;
  }

  .card {
    @apply bg-black/20 backdrop-blur-sm border border-white/10 rounded-xl p-6 shadow-xl;
  }

  .container {
    @apply max-w-[1344px] px-4 mx-auto;
  }
}

@layer utilities {
  /* Дополнительный класс для очень маленького текста */
  .text-2xs {
    font-size: 0.65rem;
    line-height: 1rem;
  }
}

/* Стили для ReactFlow */
.reactflow-wrapper {
  @apply w-full h-full;
}

.react-flow__background {
  @apply bg-black;
}

/* Базовые стили для узлов */
.react-flow__node {
  @apply shadow-lg !important;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

/* Эффекты при наведении и выборе узла */
.react-flow__node:hover {
  @apply shadow-xl !important;
  transform: translateY(-2px);
}

.react-flow__node.selected {
  @apply shadow-2xl !important;
  z-index: 100 !important;
}

/* Стили для каждого типа узла */
.react-flow__node-service {
  @apply border-primary-500/40 !important;
}

.react-flow__node-port {
  @apply border-green-400/40 !important;
}

.react-flow__node-volume {
  @apply border-yellow-400/40 !important;
}

.react-flow__node-network {
  @apply border-indigo-500/40 !important;
}

/* Стили для соединений */
.react-flow__edge-path {
  @apply stroke-white/20 stroke-[2px] !important;
}

.react-flow__edge-path:hover {
  @apply stroke-primary-500/70 !important;
}

/* Стили для точек соединения */
.react-flow__handle {
  width: 8px !important;
  height: 8px !important;
  min-width: 8px !important;
  min-height: 8px !important;
  border-width: 1px !important;
  @apply shadow !important;
  background-color: currentColor !important;
  border-color: rgba(255, 255, 255, 0.3) !important;
  transition: transform 0.2s ease, background-color 0.2s ease, border-color 0.2s ease;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
}

.react-flow__handle:hover {
  transform: scale(1.2);
  border-color: rgba(255, 255, 255, 0.5) !important;
}

/* Специфичные стили для точек соединения каждого типа узла */
.react-flow__node-service .react-flow__handle {
  color: theme('colors.primary.500') !important;
}

.react-flow__node-port .react-flow__handle {
  color: theme('colors.green.400') !important;
}

.react-flow__node-volume .react-flow__handle {
  color: theme('colors.yellow.400') !important;
}

.react-flow__node-network .react-flow__handle {
  color: theme('colors.indigo.500') !important;
}

/* Стили для панели управления */
.react-flow__controls {
  @apply bg-transparent !important;
  box-shadow: none !important;
}

.react-flow__controls-button {
  @apply bg-black/30 border border-white/10 text-white hover:bg-white/10 transition-all !important;
}

.react-flow__controls-button svg {
  @apply fill-white !important;
}

.react-flow__minimap {
  @apply bg-black/30 border border-white/10 rounded-lg overflow-hidden !important;
}

.react-flow__attribution {
  @apply hidden;
}

.react-flow__connection-path {
  @apply stroke-primary-500 !important;
}

.react-flow__panel.react-flow__attribution {
  @apply hidden;
}
